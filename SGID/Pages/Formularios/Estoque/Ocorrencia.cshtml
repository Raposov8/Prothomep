@page
@model SGID.Pages.Formularios.Estoque.OcorrenciaModel
@{
    ViewData["Title"] = "Ocorrência";
    if (User.IsInRole("Diretoria") && !User.IsInRole("Admin"))
    {
        Layout = "_LayoutDiretoria";
    }
    else
    {
        Layout = "_LayoutNovo";
    }
}

<div class="row">
    <div class="col-md-6">
        <h2 style="padding-left:20px;">Novo Orçamento</h2>
    </div>
</div>

@Html.AntiForgeryToken()

@using (@Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="card" style="padding:10px;">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12 Titulo">
                        <span>DADOS DA OCORRENCIA</span>
                    </div>
                    <div class="form-group col-sm-3 col-md-3">
                        <label class="Label">Cliente <a class="cliente"><i class="fa-solid fa-magnifying-glass-plus"></i></a></label>
                        <input class="form-control" id="Cliente" name="Cliente" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-3 col-md-3">
                        <label class="Label">Hospital</label>
                        <input class="form-control" id="Hospital" name="Hospital" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-3 col-md-3">
                        <label class="Label">Medico</label>
                        <input class="form-control" id="Medico" name="Medico" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-3 col-md-3">
                        <label class="Label">Vendedor</label>
                        <select class="form-control" id="Vendedor" name="Vendedor">
                            @foreach (var data in Model.Vendedores)
                            {
                                <option value="@data">@data</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-sm-3 col-md-3">
                        <label class="Label">Paciente</label>
                        <input type="text" class="form-control" id="Paciente" name="Paciente" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Agendamento</label>
                        <input class="form-control" id="Agendamento" name="Agendamento" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Cirurgia</label>
                        <input type="date" class="form-control" id="Cirurgia" name="Cirurgia" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Data Ocorrencia</label>
                        <input type="date" class="form-control" id="DataOcorrencia" name="DataOcorrencia" required />
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12 Titulo">
                        <span>DADOS DO PATRIMONIO/PRODUTO</span>
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Cod. Patrimonio</label>
                        <input type="text" class="form-control" id="Patrimonio" name="Patrimonio" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-4 col-md-4">
                        <label class="Label">Descrição</label>
                        <input type="text" class="form-control" id="DescPatri" name="DescPatri" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Cod. Produto</label>
                        <input type="text" class="form-control" id="Produto" name="Produto" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-4 col-md-4">
                        <label class="Label">Descrição</label>
                        <input type="text" class="form-control" id="Descricao" name="Descricao" oninput="this.value = this.value.toUpperCase()" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Quantidade</label>
                        <input type="number" class="form-control" id="Quantidade" name="Quantidade" value="1" required />
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Armazem de Origem</label>
                        <input type="text" class="form-control" id="Armazem" name="Armazem" required />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 Titulo">
                        <span>ESTADO</span>
                    </div>
                    <div class="form-group col-sm-6 col-md-6">
                        <label class="Label">Ocorrencia</label>
                        <select class="form-control" id="Ocorrencia" name="Ocorrencia">
                            <option value="DANO">DANO</option>
                            <option value="ERRO DE REGISTRO INSTRUMENTADOR">ERRO DE REGISTRO INSTRUMENTADOR</option>
                            <option value="ERRO DE REGISTRO MOTORISTA">ERRO DE REGISTRO MOTORISTA</option>
                            <option value="ERRO REGISTRO DA ÁREA DE MATERIAIS">ERRO REGISTRO DA ÁREA DE MATERIAIS</option>
                            <option value="MATERIAL SUJO">MATERIAL SUJO</option>
                            <option value="MATERIAL VIOLADO">MATERIAL VIOLADO</option>
                            <option value="PERDA">PERDA</option>
                            <option value="RETIRADA PARCIAL">RETIRADA PARCIAL</option>
                            <option value="OUTROS">OUTROS</option>

                        </select>
                    </div>
                    <div class="form-group col-sm-4 col-md-4">
                        <label class="Label">Ação</label>
                        <select class="form-control" id="Acao" name="Acao">
                            <option value="ERRO CORRIGIDO">ERRO CORRIGIDO</option>
                            <option value="LOTES CORRIGIDOS">LOTES CORRIGIDOS</option>
                            <option value="CODIGO CORRIGIDO">CODIGO CORRIGIDO</option>
                            <option value="ERRO DE REGISTRO MOTORISTA">ERRO DE REGISTRO MOTORISTA</option>
                            <option value="ERRO CORRIGIDO">ERRO CORRIGIDO</option>
                            <option value="SEM EFEITO">SEM EFEITO</option>
                            <option value="ERRO REGISTRO DA ÁREA DE MATERIAIS">ERRO REGISTRO DA ÁREA DE MATERIAIS</option>
                            <option value="INSPEÇÃO CORRIGIDA">INSPEÇÃO CORRIGIDA</option>
                            <option value="SEM EFEITO">SEM EFEITO</option>
                            <option value="MATERIAL SUJO">MATERIAL SUJO</option>
                            <option value="RETIRADO POSTERIORMENTE">RETIRADO POSTERIORMENTE</option>
                            <option value="COMUNICADO HOSPITAL">COMUNICADO HOSPITAL</option>
                            <option value="MATERIAL VIOLADO">MATERIAL VIOLADO</option>
                            <option value="REPOSTO">REPOSTO</option>
                            <option value="SEM DANO">SEM DANO</option>
                            <option value="PERDA">PERDA</option>
                            <option value="ENCONTRADO">ENCONTRADO</option>
                            <option value="NÃO ENCONTRADO">NÃO ENCONTRADO</option>
                            <option value="RETIRADA PARCIAL">RETIRADA PARCIAL</option>
                            <option value="MATERIAL RETORNADO">MATERIAL RETORNADO</option>
                            <option value="NÃO CONFORME">NÃO CONFORME</option>
                            <option value="OUTROS">OUTROS</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Procedente</label>
                        <select class="form-control" id="Procedente" name="Procedente">
                            <option value="SIM">SIM</option>
                            <option value="NAO">NÃO</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-4 col-md-4">
                        <label class="Label">Cobrado</label>
                        <select class="form-control" id="Cobrado" name="Cobrado">
                            <option value="SIM">SIM</option>
                            <option value="NAO">NÃO</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-2 col-md-2">
                        <label class="Label">Reposto</label>
                        <select class="form-control" id="Reposto" name="Reposto">
                            <option value="SIM">SIM</option>
                            <option value="NAO">NÃO</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-12 col-md-12">
                        <label class="Label">Descrição da Ocorrencia</label>
                        <input type="text" class="form-control" id="Obs" name="Obs" oninput="" required />
                    </div>
                </div>
            </div>
        </div>
        <br/>
        <div class="row justify-content-center">
            <div style="color:#00b050" class="col-md-2" id="Salvar"><button class="btn btn-button btn-success float-end" style="font-size:12px;" type="submit"><i class="fa-solid fa-thumbs-up"></i> Salvar</button></div> |
            <div style="color:#c00000" class="col-md-2"><a class="btn btn-button btn-danger" style="font-size:12px;" href="/cirurgias/agendamentos"><i class="fa-solid fa-xmark"></i> Cancelar</a></div>
        </div>
    </div>
}


@section scripts{
<script>
    $(document).ready(function() {

        $('#Patrimonio').on('change', function () {
            var codigo = $("#Patrimonio").val();
            var chamadaUrl = `/formularios/estoque/ocorrencia?handler=Patrimonio&&Codigo=${codigo}`;
            $.ajax({
                url: chamadaUrl,
                type: "GET",
                contentType: "application/json;",
                dataType: 'json',
                headers: {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {

                    $("#DescPatri").val(data);
                }
            })
        })

        $('#Produto').on('change', function () {
            var codigo = $("#Produto").val();
                var chamadaUrl = `/formularios/estoque/ocorrencia?handler=Produto&&Codigo=${codigo}`;
            $.ajax({
                url: chamadaUrl,
                type: "GET",
                contentType: "application/json;",
                dataType: 'json',
                headers: {
                    "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {

                    $("#Descricao").val(data);
                }
            })
        })

        $("#Obs").on('input', function () {

            this.value = this.value.toUpperCase()

            var texto = $(this).val();

            if (texto.length >= 300) {
                $("#Salvar").removeClass("invisivel");
                $("#Salvar").addClass("visivel");
            }
            else {
                $("#Salvar").addClass("invisivel");
                $("#Salvar").removeClass("visivel");
            }
        })
    });
</script>
<script>
    var Medicos = [];
    var Hospital = [];
    var Clientes = [];

    @foreach (var data in Model.Novo.Clientes)
    {
        @:Clientes.push("@data")
    }

    @foreach (var data in Model.Novo.Medico)
    {
        @:Medicos.push("@data");
    }

    @foreach (var data in Model.Novo.Hospital)
    {
        @:Hospital.push("@data")
    }

     $(document).ready(function () {

         function autocomplete(inp, arr) {
                 /*the autocomplete function takes two arguments,
                 the text field element and an array of possible autocompleted values:*/
                 var currentFocus;
                 /*execute a function when someone writes in the text field:*/
                 inp.addEventListener("input", function (e) {
                     var a, b, i, val = this.value;
                     /*close any already open lists of autocompleted values*/
                     closeAllLists();
                     if (!val) { return false; }
                     currentFocus = -1;
                     /*create a DIV element that will contain the items (values):*/
                     a = document.createElement("DIV");
                     a.setAttribute("id", this.id + "autocomplete-list");
                     a.setAttribute("class", "autocomplete-items form-control");
                     /*append the DIV element as a child of the autocomplete container:*/
                     this.parentNode.appendChild(a);
                     /*for each item in the array...*/
                     for (i = 0; i < arr.length; i++) {
                         /*check if the item starts with the same letters as the text field value:*/
                            if (arr[i].toUpperCase().includes(val.toUpperCase())) {
                                /*create a DIV element for each matching element:*/
                                b = document.createElement("DIV");
                                /*make the matching letters bold:*/
                                /*b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                                b.innerHTML += arr[i].substr(val.length);*/
                                b.innerHTML = arr[i];
                             /*insert a input field that will hold the current array item's value:*/
                             b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                             /*execute a function when someone clicks on the item value (DIV element):*/
                             b.addEventListener("click", function (e) {
                                 /*insert the value for the autocomplete text field:*/
                                 inp.value = this.getElementsByTagName("input")[0].value;
                                 /*close the list of autocompleted values,
                                 (or any other open lists of autocompleted values:*/
                                 closeAllLists();
                             });
                             a.appendChild(b);
                         }
                     }
                 });
                 /*execute a function presses a key on the keyboard:*/
                 inp.addEventListener("keydown", function (e) {
                     var x = document.getElementById(this.id + "autocomplete-list");
                     if (x) x = x.getElementsByTagName("div");
                     if (e.keyCode == 40) {
                         /*If the arrow DOWN key is pressed,
                         increase the currentFocus variable:*/
                         currentFocus++;
                         /*and and make the current item more visible:*/
                         addActive(x);
                     } else if (e.keyCode == 38) { //up
                         /*If the arrow UP key is pressed,
                         decrease the currentFocus variable:*/
                         currentFocus--;
                         /*and and make the current item more visible:*/
                         addActive(x);
                     } else if (e.keyCode == 13) {
                         /*If the ENTER key is pressed, prevent the form from being submitted,*/
                         e.preventDefault();
                         if (currentFocus > -1) {
                             /*and simulate a click on the "active" item:*/
                             if (x) x[currentFocus].click();
                         }
                     }
                 });
                 function addActive(x) {
                     /*a function to classify an item as "active":*/
                     if (!x) return false;
                     /*start by removing the "active" class on all items:*/
                     removeActive(x);
                     if (currentFocus >= x.length) currentFocus = 0;
                     if (currentFocus < 0) currentFocus = (x.length - 1);
                     /*add class "autocomplete-active":*/
                     x[currentFocus].classList.add("autocomplete-active");
                 }
                 function removeActive(x) {
                     /*a function to remove the "active" class from all autocomplete items:*/
                     for (var i = 0; i < x.length; i++) {
                         x[i].classList.remove("autocomplete-active");
                     }
                 }
                 function closeAllLists(elmnt) {
                     /*close all autocomplete lists in the document,
                     except the one passed as an argument:*/
                     var x = document.getElementsByClassName("autocomplete-items");
                     for (var i = 0; i < x.length; i++) {
                         if (elmnt != x[i] && elmnt != inp) {
                             x[i].parentNode.removeChild(x[i]);
                         }
                     }
                 }
                 /*execute a function when someone clicks in the document:*/
                 document.addEventListener("click", function (e) {
                     closeAllLists(e.target);
                 });
             }

         autocomplete(document.getElementById("Medico"), Medicos);
         autocomplete(document.getElementById("Hospital"), Hospital);
         autocomplete(document.getElementById("Cliente"), Clientes);
     })
</script>
}